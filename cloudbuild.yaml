substitutions:
  _SERVICE_NAME: gke-gitops

steps:

#  - id: 'Unit tests on the app'
#    name: python:3.7-slim
#    entrypoint: /bin/sh
#    args:
#      - -c
#      - pip install flask && python test/test_app1.py -v

  #  for Debug
  - id: Confirm local
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: /bin/sh
    args:
      - -c
      - |
        set -x && \
        pwd && \
        ls -alR

  - id: 'Unit tests on the app'
    name: python:3.7-slim
    entrypoint: /bin/sh
    args:
      - -c
      - |
        python -m unittest discover test --verbose

  - id: Build the container image
    name: gcr.io/cloud-builders/docker
    args:
      - build
      - -t
      - gcr.io/$PROJECT_ID/$_SERVICE_NAME:$SHORT_SHA
      - '.'

  - id: 'Push the image to Container Registry'
    name: gcr.io/cloud-builders/docker
    args:
      - push
      - gcr.io/$PROJECT_ID/$_SERVICE_NAME:$SHORT_SHA

  ### - GitHub Env repo Access by SSH
  - id: 'access the id_github file from secret manager'
    name: gcr.io/cloud-builders/gcloud
    entrypoint: bash
    args:
      - -c
      - |
        gcloud secrets versions access latest --secret=id_github > /root/.ssh/id_github
    volumes:
      - name: ssh
        path: /root/.ssh

  - id: 'Set up git with key and domain'
    name: gcr.io/cloud-builders/git
    entrypoint: bash
    args:
      - -c
      - |
        chmod 600 /root/.ssh/id_github
        cat <<EOF >/root/.ssh/config
        Hostname github.com
        IdentityFile /root/.ssh/id_github
        EOF
        ssh-keyscan -t rsa github.com > /root/.ssh/known_hosts
    volumes:
      - name: ssh
        path: /root/.ssh

  - id: Connect to the env repository of GitHub
    name: 'gcr.io/cloud-builders/git'
    args:
      - clone
      - --recurse-submodules
      - git@github.com:rafty/gcp-gke-gitops-env.git
    volumes:
      - name: 'ssh'
        path: /root/.ssh
  ### - GitHub Env repo Access by SSH

#  #  for Debug
#  - id: Confirm local
#    name: 'gcr.io/cloud-builders/gcloud'
#    entrypoint: /bin/sh
#    args:
#      - '-c'
#      - |
#        set -x && \
#        pwd && \
#        ls -al

#  #  for Debug
#  - id: Confirm GitHub
#    name: 'gcr.io/cloud-builders/gcloud'
#    dir: gcp-gke-gitops-env
#    entrypoint: /bin/sh
#    args:
#      - '-c'
#      - |
#        set -x && \
#        git remote -v && \
#        git fetch && \
#        git branch -a
#    volumes:
#      - name: 'ssh'
#        path: /root/.ssh

  - id: 'Switch to candidate branch'
    name: gcr.io/cloud-builders/gcloud
    dir: gcp-gke-gitops-env
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        set -x && \
        # git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)')
        git config --global user.email $(git log --format='%an <%ae>' -n 1 HEAD | sed 's/.*\<\([^>]*\)\>.*/\1/g') && \
        # checkout
        git fetch origin candidate && git switch candidate
    volumes:
      - name: 'ssh'
        path: /root/.ssh

  - id: Generates the new manifest
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        pwd && \
        ls -al && \
        set -x && \
        sed "s/GOOGLE_CLOUD_PROJECT/${PROJECT_ID}/g" kubernetes.yaml.tpl | \
        sed "s/MY_SERVICE_NAME/${_SERVICE_NAME}/g" kubernetes.yaml.tpl | \
        sed "s/COMMIT_SHA/${SHORT_SHA}/g" > gcp-gke-gitops-env/kubernetes.yaml

  - id: Push the manifest back to gcp-gke-gitops-env
    name: 'gcr.io/cloud-builders/gcloud'
    dir: gcp-gke-gitops-env
    entrypoint: /bin/sh
    args:
      - '-c'
      - |
        set -x && \
        pwd && \
        ls -al && \
        git config --global user.email $(git log --format='%an <%ae>' -n 1 HEAD | sed 's/.*\<\([^>]*\)\>.*/\1/g') && \
        git add kubernetes.yaml && \
        git commit \
        --author="Cloud Build Service Account <$(gcloud auth list --filter=status:ACTIVE --format='value(account)')>" \
        -m "Deploying image gcr.io/${PROJECT_ID}/$_SERVICE_NAME:${SHORT_SHA}
        Built from commit ${COMMIT_SHA} of repository gcp-gke-gitops-app
        Author: $(git log --format='%an <%ae>' -n 1 HEAD)" && \
        git branch && \
        git push origin candidate
    volumes:
      - name: 'ssh'
        path: /root/.ssh